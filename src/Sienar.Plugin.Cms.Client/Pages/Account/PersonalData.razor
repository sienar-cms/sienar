@using Microsoft.JSInterop
@using System.IO
@using Sienar.Identity.Results
@attribute [Route(DashboardUrls.Account.PersonalData)]
@inject IResultService<PersonalDataResult> PersonalDataRetriever
@inject ILogger<PersonalData> Logger
@inject IJSRuntime Interop
@inject IDialogService Dialog

<DocTitle Title="Personal data"/>

<NarrowContainer>
	<Card Title="Personal data">
		<CardContent>
			<P>
				By creating an account, you give us personal data that we store. You have the right to know what data we have. You also have the right to request that we delete your personal data.
			</P>

			<P Color="Color.Warning">
				Deleting your personal data from our servers will also delete your account. This cannot be undone!
			</P>
		</CardContent>

		<CardActions>
			<PrimaryButton
				OnClick="@DownloadPersonalData"
				Class="mr-3">
				Download personal data
			</PrimaryButton>
			<ErrorButton OnClick="@LaunchDeleteAccountDialog">
				Delete personal data
			</ErrorButton>
		</CardActions>
	</Card>
</NarrowContainer>

@code {

	[CascadingParameter]
	private Task<AuthenticationState> AuthState { get; set; } = default!;

	private bool _isLoading;

	private async Task DownloadPersonalData()
	{
		if (_isLoading)
		{
			return;
		}

		Logger.LogInformation("Downloading personal data");

		_isLoading = true;
		var data = (await PersonalDataRetriever.Execute()).Result;
		if (data?.PersonalDataFile is null)
		{
			return;
		}

		using var stream = new MemoryStream(data.PersonalDataFile.Contents);
		using var dataWrapper = new DotNetStreamReference(stream);
		await Interop.InvokeVoidAsync("downloadFileFromStream", "PersonalData.json", dataWrapper);
		_isLoading = false;
	}

	private void LaunchDeleteAccountDialog()
	{
		var options = new DialogOptions { NoHeader = true };
		Dialog.Show<DeleteAccountConfirmation>(string.Empty, options);
	}

}