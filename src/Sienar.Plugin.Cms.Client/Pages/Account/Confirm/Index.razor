@inherits ActionPage<ConfirmAccountRequest>
@attribute [AllowAnonymous]
@attribute [Route(DashboardUrls.Account.Confirm.Index)]
@inject IStatusService<ConfirmAccountRequest> Service

<DocTitle Title="Confirming your account"/>

<NarrowContainer>
	<MudText Typo="Typo.h1">
		Confirming account
	</MudText>

	@if (IsLoading)
	{
		<MudText>
			We are confirming your account. Hold on...
		</MudText>
	}
</NarrowContainer>

@code {

	/// <summary>
	/// The ID of the user whose account to confirm
	/// </summary>
	[Parameter]
	[SupplyParameterFromQuery]
	public Guid UserId { get; set; }

	/// <summary>
	/// The verification code of the user whose account to confirm
	/// </summary>
	[Parameter]
	[SupplyParameterFromQuery]
	public Guid Code { get; set; }

	[Inject]
	private NavigationManager NavManager { get; set; } = null!;

	/// <inheritdoc />
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (!firstRender) return;

		Model.UserId = UserId;
		Model.VerificationCode = Code;
		await SubmitRequest(() => Service.Execute(Model));

		if (WasSuccessful)
		{
			NavManager.NavigateTo(DashboardUrls.Account.Confirm.Successful);
		}
	}

}