@* @inherits ActionPage *@
@* @attribute [AllowAnonymous] *@
@* @attribute [Route($"{DashboardUrls.Account.Locked}/{{id:guid}}")] *@
@* @inject IUserManager UserManager; *@
@* *@
@* @if (_user is null || !_user.IsLockedOut()) *@
@* { *@
@* 	<Spinner/> *@
@* 	return; *@
@* } *@
@* *@
@* <NarrowContainer> *@
@* 	<H1>Account locked</H1> *@
@* 	<P> *@
@* 		Your account is locked <strong>@GetLockoutEndString()</strong> for the following @GetReasonString():  *@
@* 	</P> *@
@* *@
@* 	<ul> *@
@* 		@if (_user.LockoutReasons.Count == 0) *@
@* 		{ *@
@* 			<li class="mt-3"> *@
@* 				- You have attempted to log in with the wrong password too many times *@
@* 			</li> *@
@* 		} *@
@* 		else *@
@* 		{ *@
@* 			@foreach (var reason in _user.LockoutReasons) *@
@* 			{ *@
@* 				<li class="mt-3">- @reason.Reason</li> *@
@* 			} *@
@* 		} *@
@* 	</ul> *@
@* 	 *@
@* </NarrowContainer> *@
@* *@
@* @code { *@
@* *@
@* 	[Parameter] *@
@* 	public Guid Id { get; set; } *@
@* *@
@* 	private SienarUser? _user; *@
@* *@
@* 	/// <inheritdoc /> *@
@* 	protected override async Task OnInitializedAsync() *@
@* 	{ *@
@* 		await SubmitRequest( *@
@* 			async () => *@
@* 			{ *@
@* 				_user = await UserManager.GetSienarUser( *@
@* 					Id, *@
@* 					u => u.LockoutReasons); *@
@* 			}); *@
@* 	} *@
@* *@
@* 	private string GetLockoutEndString() *@
@* 	{ *@
@* 		var lockoutEnd = _user!.LockoutEnd!.Value; *@
@* 		var timezone = TimeZoneInfo.Local; *@
@* 		var timezoneId = timezone.IsDaylightSavingTime(lockoutEnd) *@
@* 			? timezone.DaylightName *@
@* 			: timezone.StandardName; *@
@* *@
@* 		return _user!.LockoutEnd!.Value == DateTime.MaxValue *@
@* 			? "permanently" *@
@* 			: $"until {_user.LockoutEnd.Value:MMMM dd, yyyy} at {_user.LockoutEnd.Value:hh:mm:ss} {timezoneId}"; *@
@* 	} *@
@* *@
@* 	private string GetReasonString() *@
@* 		=> _user!.LockoutReasons.Count > 1 *@
@* 			? "reasons" *@
@* 			: "reason"; *@
@* *@
@* } *@