@inherits FormPage<ChangePasswordRequest>
@attribute [Route(DashboardUrls.Account.PasswordChange.Index)]
@inject IStatusService<ChangePasswordRequest> PasswordChangeService

<DocTitle Title="Change password"/>

<NarrowContainer>
	<StandardForm
		Model="@Model"
		OnSubmit="@OnSubmit"
		SubmitText="Update password"
		Title="Change password">
		<Information>
			<MudText>
				Please select a new password. Your new password should be at least 8 characters long and contain a mix of lowercase and uppercase letters, numbers, and special characters.
			</MudText>
		</Information>

		<Fields>
			<Textbox
				@bind-Value="Model.NewPassword"
				For="() => Model.NewPassword"
				InputType="InputType.Password"
				Label="Enter your new password"/>
			<Textbox
				@bind-Value="Model.ConfirmNewPassword"
				For="() => Model.ConfirmNewPassword"
				InputType="InputType.Password"
				Label="Re-enter your new password"/>
			<Textbox
				@bind-Value="Model.CurrentPassword"
				For="() => Model.CurrentPassword"
				InputType="InputType.Password"
				Label="Confirm your current password"/>
		</Fields>
	</StandardForm>
</NarrowContainer>

@code {

	/// <summary>
	/// Submits a request to change the user's password
	/// </summary>
	protected async Task OnSubmit()
	{
		await SubmitRequest(() => PasswordChangeService.Execute(Model));
		if (WasSuccessful)
		{
			NavManager.NavigateTo(DashboardUrls.Account.PasswordChange.Successful);
		}
	}

}